`(div ((class . "home"))
      (div ((class . "sidebar"))
           (div ((class . "author"))
                (img ((class . "avatar") (src . ,avatar) (alt . ,author)))
                (h2 ((class . "name")) ,author)
                (p ((class . "handle"))
                   (a ((href . ,twitter))
                      "@" ,handle)))
           (div ((class . "quote"))
                "Math is the new sexy")
           (div ((class . "social"))
                (a ((href . ,github) (title . ,(concat author " on Github")) (target . "blank")) (span ((class . "github"))))
                (a ((href . ,twitter) (title . ,(concat author " on Twitter")) (target . "blank")) (span ((class . "twitter"))))
                (a ((href . ,linkedin) (title . ,(concat author " on LinkedIn")) (target . "blank")) (span ((class . "linkedin"))))
                (a ((href . "/rss.xml") (title . "Follow via RSS") (target . "blank")) (span ((class . "rss")))))
           (img ((class . "pub-key-qr") (alt . ,(concat author "'s Public GPG Key")) (src . ,gpg-qr-url))))
      (div ((class . "main"))
           (section ((class . "about-me-snippet"))
                    (header nil
                            (h2 nil "About Me"))
                    (p nil "I write software to make a living. I have been on voluntary unemployment since March 26, 2022.")
                    (p nil "I also enjoy writing, giving talks and discussing computers, security and politics.")
                    (p nil "This website has things I am willing to share publicly. You can go through my"
                       (a ((href . "/blog/")) "blog") "," (a ((href . "/poems/")) "poems") "," (a ((href . ,github) (target . "_blank")) "projects")
                       "," (a ((href . "/talks/")) "talks") ", even my"
                       (a ((href . ,resume) (target . "_blank")) "resume") " as well.")
                    (footer nil
                            "More"
                            (a ((href . "/about"))
                               "about me.")))
           (section ((class . "recent-content"))
                    (header nil (h2 nil "Recent Content"))
                    (ul ((class . "recent-content-list"))
                        ,@(seq-map
                           (lambda (post)
                             `(li nil
                                  (a ((href . ,(alist-get 'url post))
                                      (class . ,(concat "recent-content-item content-type--" (alist-get 'category post))))
                                     ,(alist-get 'title post))))
                           latest-posts))
                    (footer nil (a ((class . "btn btn-primary read-more-btn") (href . "/archive")) "See all")))))
